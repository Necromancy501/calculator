// LOGIC: BASIC

STEP 1: USER INPUT (NUMBER)
STEP 2: USER INPUT (OPPERAND)
STEP 3: USER INPUT (EQUAL)
RESULT: DISPLAY_TOP PRINT (RESULT)

// LOGIC: INTERMEDIATE

STEP 1: USER INPUT (NUMBER)
STEP 2: USER INPUT (OPPERAND)
STEP 3: REPEAT (1, 2) [X TIMES]
STEP 4: USER INPUT (EQUAL)
RESULT: DISPLAY_TOP PRINT (RESULT)

// LOGIC: ADVANCED

STEP 1: USER INPUT (NUMBER)
STEP 2: USER INPUT (OPPERAND)
STEP 3: REPEAT (1, 2) [X TIMES]
STEP 4: USER ERASE (INPUT)
STEP 5: REPEAT (1, 2) [Y TIMES]
STEP 6: USER INPUT (EQUAL)
RESULT: DISPLAY_TOP PRINT (RESULT)

// LOGIC: ERROR HANDLING

CASE: USER INPUT (OPPERAND), USER INPUT (OPPERAND)
RETURN: USE_CASE
CASE: INVALID SYNTAX
RETURN: SYNTAX ERROR
CASE: DIVIDE BY ZERO
RETURN: UNDEFINED

// SNIPPET: HIERARCHY

STEP 1: CHECK (PARENTHESIS)
STEP 2: CHECK (PEMDAS)
STEP 3: CHECK (FIFO)

// SNIPPET: DISPLAY

LAYOUT: {DISPLAY_TOP, DISPLAY_BOTTOM}
DISPLAY_TOP: PRINT (INPUT)
DISPLAY_BOTTOM: PRINT (RESULT)
EQUAL: DISPLAY_TOP.TEXT EQUALS (DISPLAY_BOTTOM.TEXT) && CLEAR (DISPLAY_BOTTOM.TEXT)

// SNIPPET: NAVIGATION

NAV (LEFT_KEY || RIGHT_KEY): MOVES (CURSOR)
IF CURSOR.POSITION EQUALS (EDGES) {NAV (EDGE_KEY) EQUALS (NULL)}
NAV (KEY.PRESS_AND_HOLD): MOVES (CURSOR)

// SNIPPET: CLEAR

CLEAR (): WIPES (DISPLAY_TOP, DISPLAY_BOTTOM) && RESET (CURSOR.POSITION)


